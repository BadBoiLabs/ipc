# See fendermint/testing/snapshot-test/src/lib.rs for description.

extend = [
  { path = "../scripts/common.toml" },
]

env_files = [
  # `cetf.env` is the environment for `cargo make`.
  { path = "./scripts/cetf.env" },
  { path = "../scripts/common.env" },
  { path = "../scripts/ci.env", profile = "ci" },
]

[tasks.setup-cetf]
run_task = { name = [
  "setup-seed",
  "node-1-setup",
  "node-2-setup",
  "node-3-setup",
] }

[tasks.fendermint-start-cetf]
extend = "fendermint-run"
env = { "ENTRY" = "fendermint", "CMD" = "run", "FLAGS" = """
-d \
--env FM_VALIDATOR_KEY__PATH=/data/${NODE_NAME}/${VALIDATOR_PRIV_KEY_PATH} \
--env FM_VALIDATOR_KEY__KIND=ethereum \
--env FM_BLS_SIGNING_KEY__PATH=/data/${NODE_NAME}/${BLS_PRIV_KEY_PATH} \
""" }

# Start Seed node
[tasks.setup-seed]
dependencies = [
  "create-log-volume",
  "test-data-dir",
  "test-data-env",
  "test-node-dir",
  "docker-network-create",
  "cometbft-init",
  "fendermint-init",
  "fendermint-start-cetf",
  "cometbft-start",
  "ethapi-start",
  "cometbft-wait",
  # "promtail-start",
  "fendermint-logs",
  "cometbft-logs",
  "ethapi-logs",
]


# Overriding the env file to enable snapshotting.
# This one is applied on every *container*.
# The other env files are for `cargo make` itself,
# the values are only available inside TOML files.
# Disabling PEX so nodes only connect to what they are told about.
[tasks.test-data-env]
script = """
cat << EOF > ${TEST_DATA_DIR}/.env
CMT_P2P_MAX_NUM_OUTBOUND_PEERS=3
CMT_P2P_MAX_NUM_INBOUND_PEERS=3
CMT_CONSENSUS_TIMEOUT_COMMIT=1s
CMT_P2P_PEX=true
EOF
"""

# This is the test workflow
[tasks.test]
clear = true
run_task = { name = [
  "node-1-setup",
  "node-1-sync-test",
  "node-2-setup",
  "node-2-sync-test",
  "node-3-setup",
  "node-3-sync-test",
], fork = true, cleanup_task = "snapshot-teardown" }


# Shut down all non-default nodes.
[tasks.cetf-teardown]
run_task = { name = [
  "node-1-teardown",
  "node-2-teardown",
  "node-3-teardown",
] }


[tasks.node-env]
script = """
cat ${TEST_DATA_DIR}/.env > ${TEST_DATA_DIR}/${NODE_NAME}/.env
"""

[tasks.val-keys]
script = """
if [ $NODE_NAME = "node-1" ]; then
cp ${TEST_DATA_DIR}/keys/victoria.priv_validator_key.json ${TEST_DATA_DIR}/${NODE_NAME}/cometbft/config/priv_validator_key.json
cp ${TEST_DATA_DIR}/keys/victoria.bls.sk ${TEST_DATA_DIR}/${NODE_NAME}/cometbft/config/bls_key.sk
cp ${TEST_DATA_DIR}/keys/victoria.sk ${TEST_DATA_DIR}/${NODE_NAME}/cometbft/config/validator_key.sk

fi
if [ $NODE_NAME = "node-2" ]; then
cp ${TEST_DATA_DIR}/keys/vivienne.priv_validator_key.json ${TEST_DATA_DIR}/${NODE_NAME}/cometbft/config/priv_validator_key.json
cp ${TEST_DATA_DIR}/keys/vivienne.bls.sk ${TEST_DATA_DIR}/${NODE_NAME}/cometbft/config/bls_key.sk
cp ${TEST_DATA_DIR}/keys/vivienne.sk ${TEST_DATA_DIR}/${NODE_NAME}/cometbft/config/validator_key.sk
fi
if [ $NODE_NAME = "node-3" ]; then
cp ${TEST_DATA_DIR}/keys/volvo.priv_validator_key.json ${TEST_DATA_DIR}/${NODE_NAME}/cometbft/config/priv_validator_key.json
cp ${TEST_DATA_DIR}/keys/volvo.bls.sk ${TEST_DATA_DIR}/${NODE_NAME}/cometbft/config/bls_key.sk
cp ${TEST_DATA_DIR}/keys/volvo.sk ${TEST_DATA_DIR}/${NODE_NAME}/cometbft/config/validator_key.sk
fi
"""


# ### General tasks for node-1 and node-2

[tasks.node-setup]
# Export node-0 ID.
dependencies = ["cometbft-export-node-id"]
run_task = { name = [
  "test-node-dir",
  "node-env",
  "cometbft-init",
  "val-keys",
  "node-set-seed",
  "node-copy-genesis",
  "fendermint-start-cetf",
  "cometbft-start",
  "cometbft-wait",
  "cometbft-export-node-id",
  "fendermint-logs",
  "cometbft-logs",
] }


# Set the persistent peer address to that of the default node-0.
[tasks.node-set-seed]
script = """
CMT_SEED_ID=$(cat $BASE_DIR/$SEED_NODE_NAME/node-id)
CMT_P2P_PERSISTENT_PEERS=$CMT_SEED_ID@$SEED_CMT_CONTAINER_NAME:26656
sed -i'' -e "s|persistent_peers = \\"\\"|persistent_peers = \\"$CMT_P2P_PERSISTENT_PEERS\\"|" $BASE_DIR/${NODE_NAME}/cometbft/config/config.toml
"""

# Get the genesis from node-0
[tasks.node-copy-genesis]
script = """
cp $BASE_DIR/${SEED_NODE_NAME}/cometbft/config/genesis.json \
   $BASE_DIR/${NODE_NAME}/cometbft/config/genesis.json
"""

# Copy over validator

[tasks.node-teardown]
run_task = { name = [
  "cometbft-destroy",
  "fendermint-destroy",
  "test-node-dir-rm",
] }

# See if it managed to sync.
[tasks.node-sync-test]
script = """
EARLIEST=$(curl -s localhost:${CMT_RPC_HOST_PORT}/status | jq -r ".result.sync_info.earliest_block_height")
LATEST=$(curl -s localhost:${CMT_RPC_HOST_PORT}/status | jq -r ".result.sync_info.latest_block_height")

if [ "$EARLIEST" = "$LATEST" ]; then
  echo "ERROR: The chain is not syncing!"
  exit 1
fi
"""

[tasks.register-bls-keys-seed]
script = """
cd ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/fendermint/testing/cetf-test

cargo run --example delorean -- \
  --secret-key test-data/keys/veronica.sk \
  ${VERBOSITY} \
  register-bls \
  --bls-secret-key test-data/keys/veronica.bls.sk
"""

[tasks.register-bls-keys]
script = """
cd ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/fendermint/testing/cetf-test

cargo run --example delorean -- \
  --secret-key test-data/keys/veronica.sk \
  ${VERBOSITY} \
  register-bls \
  --bls-secret-key test-data/keys/veronica.bls.sk

cargo run --example delorean -- \
  --secret-key test-data/keys/victoria.sk \
  ${VERBOSITY} \
  register-bls \
  --bls-secret-key test-data/keys/victoria.bls.sk

cargo run --example delorean -- \
  --secret-key test-data/keys/vivienne.sk \
  ${VERBOSITY} \
  register-bls \
  --bls-secret-key test-data/keys/vivienne.bls.sk

cargo run --example delorean -- \
  --secret-key test-data/keys/volvo.sk \
  ${VERBOSITY} \
  register-bls \
  --bls-secret-key test-data/keys/volvo.bls.sk
"""


[tasks.node-1-setup]
env_files = [{ path = "./scripts/node-1.env" }]
extend = "node-setup"

[tasks.node-1-teardown]
env_files = [{ path = "./scripts/node-1.env" }]
extend = "node-teardown"

[tasks.node-1-sync-test]
env_files = [{ path = "./scripts/node-1.env" }]
extend = "node-sync-test"

# ### node-2 tasks

[tasks.node-2-setup]
env_files = [{ path = "./scripts/node-2.env" }]
extend = "node-setup"

[tasks.node-2-teardown]
env_files = [{ path = "./scripts/node-2.env" }]
extend = "node-teardown"

[tasks.node-2-sync-test]
env_files = [{ path = "./scripts/node-2.env" }]
extend = "node-sync-test"


# ### node-3 tasks

[tasks.node-3-setup]
env_files = [{ path = "./scripts/node-3.env" }]
extend = "node-setup"

[tasks.node-3-teardown]
env_files = [{ path = "./scripts/node-3.env" }]
extend = "node-teardown"

[tasks.node-3-sync-test]
env_files = [{ path = "./scripts/node-3.env" }]
extend = "node-sync-test"
